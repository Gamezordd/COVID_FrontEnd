{"version":3,"sources":["Components/XrayComponent.js","Components/NavbarComponent.js","Components/Router.js","App.js","serviceWorker.js","index.js"],"names":["XrayModal","props","state","pictures","onDrop","bind","picture","this","setState","concat","console","log","route","Modal","style","padding","BackdropComponent","Backdrop","closeAfterTransition","open","onClose","toggleModal","Fade","in","Container","backgroundColor","width","Typography","variant","gutterBottom","color","paddingTop","Grid","direction","container","TextField","marginTop","label","margin","marginLeft","Box","my","mr","Button","startIcon","Publish","accept","id","multiple","display","type","paddingBottom","htmlFor","component","Component","Navbar","handleClick","navigate","className","alignItems","xs","onClick","justify","Info","size","marginRight","ButtonGroup","Router","Home","Guidelines","Precautions","SelfDiagnosis","Members","React","require","App","address","handleNav","toggleXrayModal","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.338c567c.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Typography, Container, Modal, Fade, Backdrop, TextField, Button ,Grid, Box} from \"@material-ui/core\";\r\nimport { Publish } from \"@material-ui/icons\";\r\n\r\nexport default class XrayModal extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pictures:[]\r\n        }\r\n        this.onDrop = this.onDrop.bind(this);\r\n    }\r\n\r\n    onDrop(picture){\r\n        this.setState({\r\n            picture: this.state.pictures.concat(picture)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log(\"modal: \", this.props.route)\r\n        return(\r\n            <Modal\r\n            style={{padding:\"15vh\"}}\r\n            BackdropComponent={Backdrop}\r\n            closeAfterTransition\r\n            open={this.props.route}\r\n            onClose={() => {\r\n                this.props.toggleModal();\r\n            }}>\r\n                <Fade in={this.props.route}>\r\n                <Container style={{backgroundColor: \"#2e2e2e\", width:\"fit-content\"}}>\r\n                    <Typography variant=\"h5\" gutterBottom style={{color:\"#fff\", paddingTop:10}}>\r\n                        X-Ray Upload\r\n                    </Typography>\r\n                    <Grid direction=\"column\" container>\r\n                        <Grid container direction=\"row\">\r\n                            <TextField variant=\"outlined\" style={{marginTop:5}} label=\"Temprature\"/>\r\n                            <TextField variant=\"outlined\" style={{margin:5, marginLeft:20}} label=\"Something else\"/>\r\n                            <TextField variant=\"outlined\" style={{margin:5, marginLeft:20}} label=\"Yet Something Else\"/>\r\n                        </Grid>\r\n                        <Grid direction=\"row\" container>\r\n                        <Box my={3} mr={2}>\r\n                        <Button startIcon={<Publish/>} variant=\"contained\" color=\"primary\">\r\n                            Upload\r\n                        </Button>\r\n                        </Box>\r\n                        <Box my={3}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            style={{display:\"none\"}}\r\n                            type=\"file\"\r\n                        />\r\n                        <label style={{paddingTop:20, paddingBottom:20}} htmlFor=\"contained-button-file\">\r\n                            <Button  variant=\"contained\" color=\"primary\" component=\"span\">\r\n                            Select Picture\r\n                            </Button>\r\n                        </label>\r\n                        </Box>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Container>\r\n                </Fade>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Grid, Box, Button, ButtonGroup, Typography} from \"@material-ui/core\";\r\nimport { Info } from \"@material-ui/icons\";\r\n\r\n\r\nexport default class Navbar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    handleClick = (route) => {\r\n        this.props.navigate(route);\r\n    }\r\n    render(){\r\n        return(\r\n            <Grid container className=\"navbar\">\r\n                <Grid container alignItems=\"center\" xs={3} onClick={() => this.handleClick(0)}>\r\n                    <Typography variant=\"h5\" style={{marginLeft:\"3%\"}} >\r\n                        COVID-19 AI\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid container xs={9} justify=\"flex-end\" style={{padding:3}}>\r\n                <Button \r\n                    startIcon={<Info/>}\r\n                    variant=\"outlined\" \r\n                    size=\"small\" \r\n                    color=\"primary\"  \r\n                    onClick={() => this.props.toggleModal()} \r\n                    style={{marginRight:\"2%\"}}\r\n                    >\r\n                    Submit X-Ray\r\n                </Button>\r\n                <ButtonGroup variant=\"text\" color=\"inherit\" className=\"buttons\" style={{marginRight:\"1%\"}}>\r\n                    <Button onClick={() => this.handleClick(0)}>Home</Button>\r\n                    <Button onClick={() => this.handleClick(1)}>Guidelines</Button>\r\n                    <Button onClick={() => this.handleClick(2)}>Precautions</Button>\r\n                    <Button onClick={() => this.handleClick(3)}>Self-Diagnosis</Button>\r\n                    <Button onClick={() => this.handleClick(4)}>Team Members</Button>\r\n                </ButtonGroup>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Container, Typography } from '@material-ui/core';\r\n\r\nexport default class Router extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        console.log(\"recieved route: \", this.props.route)\r\n        if(this.props.route === 0){\r\n            return(\r\n                <Home/>\r\n            );\r\n        }\r\n        if(this.props.route === 1){\r\n            return(\r\n                <Guidelines/>\r\n            );\r\n        }\r\n        if(this.props.route === 2){\r\n            return(\r\n                <Precautions/>\r\n            );\r\n        }\r\n        if(this.props.route === 3){\r\n            return(\r\n                <SelfDiagnosis/>\r\n            );\r\n        }\r\n        if(this.props.route === 4){\r\n            return(\r\n                <Members/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport function Home() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n                Content goes here\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\nexport function Guidelines() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n                Home goes here\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\nexport function Precautions() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n                Precautions Content goes here\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\nexport function SelfDiagnosis() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n                Self-Diagnosis Content goes here\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\nexport function Members() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n                Members Content goes here\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport XrayModal from \"./Components/XrayComponent\";\nimport Navbar from './Components/NavbarComponent'\nimport { Container } from '@material-ui/core';\nimport Router from \"./Components/Router\";\n\nrequire('typeface-roboto')\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      address:0,\n      XrayModal:false\n    }\n    this.handleNav = this.handleNav.bind(this);\n    this.toggleXrayModal = this.toggleXrayModal.bind(this);\n  }\n  handleNav(address){\n    this.setState({address: address})\n      \n  }\n  toggleXrayModal(){\n    this.setState({XrayModal: !this.state.XrayModal})\n  }\n\n  render(){\n    console.log(\"address: \", this.state.address);\n    return (\n      <div className=\"App\">\n        <div>\n          <Navbar toggleModal={this.toggleXrayModal} navigate={this.handleNav}/>\n        </div>\n        <Router route={this.state.address}/>\n        <XrayModal route={this.state.XrayModal} toggleModal={this.toggleXrayModal}/>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}