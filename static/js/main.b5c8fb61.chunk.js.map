{"version":3,"sources":["Components/XrayComponent.js","Components/NavbarComponent.js","Components/MapComponent.js","Components/TextComponent.js","Components/HomeComponent.js","Components/Router.js","App.js","serviceWorker.js","index.js"],"names":["XrayModal","console","log","this","props","route","Modal","style","padding","BackdropComponent","Backdrop","closeAfterTransition","open","onClose","toggleModal","Fade","in","Container","backgroundColor","width","Typography","variant","gutterBottom","color","paddingTop","Grid","direction","container","TextField","marginTop","label","margin","marginLeft","Box","my","mr","Button","startIcon","Publish","accept","id","multiple","display","type","paddingBottom","htmlFor","component","Component","Navbar","handleClick","navigate","handleMenu","event","setState","anchorEl","currentTarget","handleClose","state","isOpen","handleToggle","bind","isMobile","size","onClick","Menu","keepMounted","Boolean","MenuItem","Info","marginRight","ButtonGroup","className","minWidth","alignItems","xs","md","justify","navButtons","AnyReactComponent","text","background","textAlign","justifyContent","borderRadius","transform","MapContainer","trigger","parseFloat","lat","lng","height","position","bootstrapURLKeys","key","defaultCenter","defaultZoom","withStyles","root","input","placeholder","classes","InputLabelProps","inputProps","fullWidth","Home","onImageChange","target","files","reader","FileReader","onload","e","image","result","readAsDataURL","loadMap","isBrowser","maxHeight","maxWidth","overflowX","overflowY","src","alt","flex","item","minHeight","borderColor","borderBottom","onPlaceSelected","place","coordinates","JSON","parse","stringify","geometry","location","alert","types","onChange","PhotoLibrary","renderMap","renderImage","Router","Guidelines","Precautions","SelfDiagnosis","Members","React","require","App","address","handleNav","toggleXrayModal","document","body","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b5c8fb61.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Typography, Container, Modal, Fade, Backdrop, TextField, Button ,Grid, Box} from \"@material-ui/core\";\r\nimport { Publish } from \"@material-ui/icons\";\r\n\r\nexport default class XrayModal extends Component{\r\n    render(){\r\n        console.log(\"modal: \", this.props.route)\r\n        return(\r\n            <Modal\r\n            style={{padding:\"15vh\"}}\r\n            BackdropComponent={Backdrop}\r\n            closeAfterTransition\r\n            open={this.props.route}\r\n            onClose={() => {\r\n                this.props.toggleModal();\r\n            }}>\r\n                <Fade in={this.props.route}>\r\n                <Container style={{backgroundColor: \"#2e2e2e\", width:\"fit-content\"}}>\r\n                    <Typography variant=\"h5\" gutterBottom style={{color:\"#fff\", paddingTop:10}}>\r\n                        X-Ray Upload\r\n                    </Typography>\r\n                    <Grid direction=\"column\" container>\r\n                        <Grid container direction=\"row\">\r\n                            <TextField variant=\"outlined\" style={{marginTop:5, color:\"#fff\"}} label=\"temperature\"/>\r\n                            <TextField variant=\"outlined\" style={{margin:5, marginLeft:20}} label=\"Something else\"/>\r\n                            <TextField variant=\"outlined\" style={{margin:5, marginLeft:20}} label=\"Yet Something Else\"/>\r\n                        </Grid>\r\n                        <Grid direction=\"row\" container>\r\n                        <Box my={3} mr={2}>\r\n                        <Button startIcon={<Publish/>} variant=\"contained\" color=\"primary\">\r\n                            Upload\r\n                        </Button>\r\n                        </Box>\r\n                        <Box my={3}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            style={{display:\"none\"}}\r\n                            type=\"file\"\r\n                        />\r\n                        <label style={{paddingTop:20, paddingBottom:20}} htmlFor=\"contained-button-file\">\r\n                            <Button  variant=\"contained\" color=\"primary\" component=\"span\">\r\n                            Select Picture\r\n                            </Button>\r\n                        </label>\r\n                        </Box>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Container>\r\n                </Fade>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Grid, Button, ButtonGroup, Typography, Menu, MenuItem} from \"@material-ui/core\";\r\nimport { Info } from \"@material-ui/icons\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {isMobile} from \"react-device-detect\";\r\n\r\nexport default class Navbar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isOpen:false,\r\n            anchorEl:null\r\n        }\r\n        this.handleToggle=this.handleToggle.bind(this);\r\n    }\r\n    handleClick = (route) => {\r\n        this.props.navigate(route);\r\n    }\r\n    handleToggle(){\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n    handleMenu = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n      };\r\n    \r\n      handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n      };\r\n    navButtons(){\r\n        \r\n\r\n        if(isMobile){\r\n            return(\r\n                <div>\r\n                    <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={this.handleMenu} style={{margin: \"3%\"}}>\r\n                        <MenuIcon/>\r\n                    </Button>\r\n                    <Menu\r\n                        keepMounted\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleClose}\r\n                        >\r\n                        <MenuItem onClick={() => this.handleClick(0)}>Home</MenuItem>\r\n                        <MenuItem onClick={() => this.handleClick(1)}>Guidelines</MenuItem>\r\n                        <MenuItem onClick={() => this.handleClick(2)}>Precautions</MenuItem>\r\n                        <MenuItem onClick={() => this.handleClick(3)}>Self-Diagnosis</MenuItem>\r\n                        <MenuItem onClick={() => this.handleClick(4)}>Team Members</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n                    <Button \r\n                        startIcon={<Info/>}\r\n                        variant=\"outlined\" \r\n                        size=\"small\" \r\n                        color=\"primary\"  \r\n                        onClick={() => this.props.toggleModal()} \r\n                        style={{marginRight:\"2%\", display:\"none\"}}\r\n                        >\r\n                        Submit X-Ray\r\n                    </Button>\r\n                    <ButtonGroup variant=\"text\" color=\"inherit\" className=\"buttons\" style={{color:\"#707070\"}}>\r\n                        <Button onClick={() => this.handleClick(0)}>Home</Button>\r\n                        <Button onClick={() => this.handleClick(1)}>Guidelines</Button>\r\n                        <Button onClick={() => this.handleClick(2)}>Precautions</Button>\r\n                        <Button style={{minWidth:\"10vw\"}} onClick={() => this.handleClick(3)}>Self-Diagnosis</Button>\r\n                        <Button style={{minWidth:\"10vw\"}} onClick={() => this.handleClick(4)}>Team Members</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <Grid container className=\"navbar\">\r\n                <Grid container alignItems=\"center\" xs={6} md={3} onClick={() => this.handleClick(0)}>\r\n                    <Typography variant=\"h5\" style={{marginLeft:\"3%\"}} >\r\n                        Flatpex\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid container xs={6} md={9} justify=\"flex-end\" style={{padding:2}}>\r\n                    {this.navButtons()}\r\n                </Grid>\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst AnyReactComponent = ({ text }) => (\r\n    <div style={{\r\n      color: 'white', \r\n      background: '#4949fc',\r\n      padding: '15px 10px',\r\n      display: 'inline-flex',\r\n      textAlign: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderRadius: '1%',\r\n      transform: 'translate(-50%, -50%)'\r\n    }}>\r\n      {text}\r\n    </div>\r\n  );\r\nexport default class MapContainer extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state={\r\n           trigger:true\r\n       }\r\n   }\r\n   \r\n    render(){\r\n        console.log(\"Loadmap: lat:\", parseFloat(this.props.lat), \"lng: \", parseFloat(this.props.lng));\r\n            return(\r\n                <GoogleMapReact\r\n                    style={{height:\"80vh\", position: \"relative\"}}\r\n                    bootstrapURLKeys={{ key: 'AIzaSyCJVtn4hvD9W7WVyTc7XH16jMZ24ZQTnoo'}}\r\n                    defaultCenter={{lat: parseFloat(this.props.lat), lng: parseFloat(this.props.lng)}}\r\n                    defaultZoom={11}\r\n                >\r\n                        <AnyReactComponent\r\n                            lat={parseFloat(this.props.lat)}\r\n                            lng={parseFloat(this.props.lng)}\r\n                            text=\"o\"\r\n                        />\r\n                </GoogleMapReact>\r\n            )\r\n            \r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n      \r\n    },\r\n    input: {\r\n      color: \"white\",\r\n      background: \"#2e2e2e\"\r\n    },\r\n    placeholder: {\r\n      color: \"#696969\"\r\n    }\r\n  };\r\n\r\nfunction Text(props){\r\n    const { classes } = props;\r\n    return(\r\n        <div>\r\n        <TextField InputLabelProps={{className: classes.placeholder}} inputProps={{className: classes.input}} variant=\"filled\" fullWidth style={{marginTop:\"5vh\"}} label=\"Something else\"/>\r\n        <TextField InputLabelProps={{className: classes.placeholder}} inputProps={{className: classes.input}} variant=\"filled\" fullWidth style={{marginTop:\"5vh\"}} label=\"Yet Something Else\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nText.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Text);","import React,{Component} from \"react\";\r\nimport {Grid, Button, Box, Typography, Divider} from '@material-ui/core';\r\nimport { Publish, PhotoLibrary } from \"@material-ui/icons\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport MapContainer from './MapComponent';\r\nimport Text from \"./TextComponent\";\r\nimport {isBrowser} from \"react-device-detect\";\r\n\r\nexport default class Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            lat: 70,\r\n            lng: 45,\r\n            loadMap: false,\r\n            image:''\r\n        }\r\n\r\n    }\r\n\r\n    onImageChange = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n          let reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            this.setState({image: e.target.result});\r\n          };\r\n          reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n      }\r\n\r\n    renderImage(){\r\n        if (this.state.image !== ''){\r\n            if(isBrowser){\r\n                return(\r\n                    <Grid container justify=\"center\" style={{maxHeight:\"80vh\", maxWidth:\"100vw\", overflowX:\"scroll\", overflowY:\"scroll\"}}>\r\n                        <img src={this.state.image} alt=\"SelectedImage\"/>\r\n                    </Grid>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <Grid container justify=\"center\" style={{maxHeight:\"80vh\", maxWidth:\"30vw\", minWidth:\"150px\", overflowX:\"scroll\", overflowY:\"scroll\"}}>\r\n                        <img src={this.state.image} alt=\"SelectedImage\"/>\r\n                    </Grid>\r\n                );\r\n            }\r\n        }\r\n        else{\r\n            return(\r\n                <Grid container xs={4} alignItems=\"center\" style={{flex:7}}>\r\n                    <Typography variant=\"h5\" style={{color:\"#fff\"}}>\r\n                        Selected Image Appears Here\r\n                    </Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n    renderMap(){\r\n        if(this.state.loadMap){\r\n            console.log(\"loadmap: \", this.state.loadMap);\r\n            return(\r\n                <MapContainer\r\n                    key={this.state.lat} \r\n                    lat={this.state.lat} \r\n                    lng={this.state.lng}\r\n                />\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Grid item xs={4}>\r\n                <Typography variant=\"h5\" style={{color: \"white\"}}>\r\n                    Enter location to begin\r\n                </Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <Grid container justify=\"space-evenly\" direction=\"row\">\r\n                    <Grid item direction=\"column\" alignItems=\"flex-start\" justify=\"center\" xs={11} md={4} style={{  marginTop:\"10vh\", minHeight:\"60vh\",padding:\"1%\", borderRadius:\"16px\"}} className=\"border\">\r\n                        <Typography variant=\"h5\" style={{color:\"#fff\", paddingTop:\"6vh\", margin:5}}>\r\n                            Details\r\n                        </Typography>\r\n\r\n                        <Autocomplete\r\n                            style={{width: '98%', height:\"9vh\", marginTop:\"5vh\", backgroundColor:\"rgba(46,46,46,0.8)\", borderColor:\"rgba(0,0,0,0)\", borderBottom:\"black\", color:\"white\"}}\r\n                            onPlaceSelected={(place) => {\r\n                                try{\r\n                                console.log(\"location: \", place);\r\n                                const coordinates = JSON.parse(JSON.stringify(place.geometry.location));\r\n                                this.setState({\r\n                                    lat: JSON.stringify(coordinates.lat),\r\n                                    lng: JSON.stringify(coordinates.lng),\r\n                                    loadMap: true\r\n                                })                                \r\n                                }\r\n                                catch{\r\n                                    alert('Daily quota limit for Google Maps API exceeded.')                                }\r\n                            }}\r\n                            types={['(regions)']}\r\n                        />\r\n                        <Text/>\r\n                    \r\n                        <Grid container direction=\"row\" className=\"btnpos\" style={{marginTop:\"4vh\"}}>\r\n                            <Box my={3} mr={2}>\r\n                                <Button startIcon={<Publish/>} variant=\"contained\" color=\"primary\">\r\n                                    Upload\r\n                                </Button>\r\n                            </Box>\r\n                            <Box my={3}>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    id=\"contained-button-file\"\r\n                                    onChange= {(e) => this.onImageChange(e)}\r\n                                    style={{display:\"none\"}}\r\n                                    type=\"file\"\r\n                                />\r\n                                <label style={{paddingTop:20, margin:5, marginTop:\"8vh\"}} htmlFor=\"contained-button-file\">\r\n                                    <Button startIcon={<PhotoLibrary/>} variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                        Select\r\n                                    </Button>\r\n                                </label>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container direction=\"column\" justify=\"center\" xs={11} md={3} style={{ marginTop:\"10vh\", minHeight:\"60vh\",padding:\"1%\", borderRadius:\"16px\"}} className=\"border\">\r\n                        {this.renderMap()}\r\n                    </Grid>\r\n\r\n                    <Grid container direction=\"column\" xs={11} md={3} style={{marginTop:\"10vh\",minHeight:\"70vh\", padding:\"1%\", borderRadius:\"16px\"}} className=\"border\">\r\n                        {this.renderImage()}\r\n                    </Grid>\r\n                </Grid>\r\n        );\r\n    }   \r\n}\r\n\r\n    ","import React from 'react';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport Home from \"./HomeComponent\";\r\nexport default class Router extends React.Component{\r\n\r\n    render(){\r\n        console.log(\"recieved route: \", this.props.route)\r\n        if(this.props.route === 0){\r\n            return(\r\n                <Home/>\r\n            );\r\n        }\r\n        if(this.props.route === 1){\r\n            return(\r\n                <Guidelines/>\r\n            );\r\n        }\r\n        if(this.props.route === 2){\r\n            return(\r\n                <Precautions/>\r\n            );\r\n        }\r\n        if(this.props.route === 3){\r\n            return(\r\n                <SelfDiagnosis/>\r\n            );\r\n        }\r\n        if(this.props.route === 4){\r\n            return(\r\n                <Members/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport function Guidelines() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\" style={{margin:\"10vh\"}}>\r\n                Guidelines will be added stat! Please visit later. :)\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\nexport function Precautions() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\" style={{margin:\"10vh\"}}>\r\n                Precautions will be added stat! Please visit later. :)\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\nexport function SelfDiagnosis() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\" style={{margin:\"10vh\"}}>\r\n                Self-Diagnosis will be added stat! Please visit later. :)\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\nexport function Members() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\" style={{margin:\"10vh\"}}>\r\n                Members will be added stat! Please visit later. :)\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport XrayModal from \"./Components/XrayComponent\";\nimport Navbar from './Components/NavbarComponent'\nimport Router from \"./Components/Router\";\n\nrequire('typeface-roboto')\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      address:0,\n      XrayModal:false\n    }\n    this.handleNav = this.handleNav.bind(this);\n    this.toggleXrayModal = this.toggleXrayModal.bind(this);\n  }\n  handleNav(address){\n    this.setState({address: address})\n      \n  }\n  toggleXrayModal(){\n    this.setState({XrayModal: !this.state.XrayModal})\n  }\n\n  render(){\n    console.log(\"address: \", this.state.address);\n    document.body.style = 'background: #171717 ;';\n    return (\n      <div className=\"App\">\n        <div>\n          <Navbar toggleModal={this.toggleXrayModal} navigate={this.handleNav}/>\n        </div>\n        <Router route={this.state.address}/>\n        <XrayModal route={this.state.XrayModal} toggleModal={this.toggleXrayModal}/>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}