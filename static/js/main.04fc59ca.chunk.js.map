{"version":3,"sources":["Components/XrayComponent.js","Components/NavbarComponent.js","Components/MapComponent.js","Components/TextComponent.js","Components/HomeComponent.js","Components/Router.js","App.js","serviceWorker.js","index.js"],"names":["XrayModal","console","log","this","props","route","Modal","style","padding","BackdropComponent","Backdrop","closeAfterTransition","open","onClose","toggleModal","Fade","in","Container","backgroundColor","width","Typography","variant","gutterBottom","color","paddingTop","Grid","direction","container","TextField","marginTop","label","margin","marginLeft","Box","my","mr","Button","startIcon","Publish","accept","id","multiple","display","type","paddingBottom","htmlFor","component","Component","Navbar","handleClick","navigate","className","alignItems","xs","onClick","justify","Info","size","marginRight","ButtonGroup","AnyReactComponent","text","background","textAlign","justifyContent","borderRadius","transform","MapContainer","state","trigger","parseFloat","lat","lng","bootstrapURLKeys","key","defaultCenter","defaultZoom","withStyles","root","input","placeholder","classes","InputLabelProps","inputProps","fullWidth","Home","onImageChange","event","target","files","reader","FileReader","onload","e","setState","image","result","readAsDataURL","loadMap","maxHeight","maxWidth","overflowX","overflowY","src","alt","flex","item","height","paddingRight","paddingLeft","borderColor","borderBottom","onPlaceSelected","place","coordinates","JSON","parse","stringify","geometry","location","alert","types","onChange","renderMap","renderImage","Router","Guidelines","Precautions","SelfDiagnosis","Members","React","require","App","address","handleNav","bind","toggleXrayModal","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.04fc59ca.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Typography, Container, Modal, Fade, Backdrop, TextField, Button ,Grid, Box} from \"@material-ui/core\";\r\nimport { Publish } from \"@material-ui/icons\";\r\n\r\nexport default class XrayModal extends Component{\r\n    render(){\r\n        console.log(\"modal: \", this.props.route)\r\n        return(\r\n            <Modal\r\n            style={{padding:\"15vh\"}}\r\n            BackdropComponent={Backdrop}\r\n            closeAfterTransition\r\n            open={this.props.route}\r\n            onClose={() => {\r\n                this.props.toggleModal();\r\n            }}>\r\n                <Fade in={this.props.route}>\r\n                <Container style={{backgroundColor: \"#2e2e2e\", width:\"fit-content\"}}>\r\n                    <Typography variant=\"h5\" gutterBottom style={{color:\"#fff\", paddingTop:10}}>\r\n                        X-Ray Upload\r\n                    </Typography>\r\n                    <Grid direction=\"column\" container>\r\n                        <Grid container direction=\"row\">\r\n                            <TextField variant=\"outlined\" style={{marginTop:5, color:\"#fff\"}} label=\"temperature\"/>\r\n                            <TextField variant=\"outlined\" style={{margin:5, marginLeft:20}} label=\"Something else\"/>\r\n                            <TextField variant=\"outlined\" style={{margin:5, marginLeft:20}} label=\"Yet Something Else\"/>\r\n                        </Grid>\r\n                        <Grid direction=\"row\" container>\r\n                        <Box my={3} mr={2}>\r\n                        <Button startIcon={<Publish/>} variant=\"contained\" color=\"primary\">\r\n                            Upload\r\n                        </Button>\r\n                        </Box>\r\n                        <Box my={3}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            style={{display:\"none\"}}\r\n                            type=\"file\"\r\n                        />\r\n                        <label style={{paddingTop:20, paddingBottom:20}} htmlFor=\"contained-button-file\">\r\n                            <Button  variant=\"contained\" color=\"primary\" component=\"span\">\r\n                            Select Picture\r\n                            </Button>\r\n                        </label>\r\n                        </Box>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Container>\r\n                </Fade>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Grid, Button, ButtonGroup, Typography} from \"@material-ui/core\";\r\nimport { Info } from \"@material-ui/icons\";\r\n\r\n\r\nexport default class Navbar extends Component {\r\n    handleClick = (route) => {\r\n        this.props.navigate(route);\r\n    }\r\n    render(){\r\n        return(\r\n            <Grid container className=\"navbar\">\r\n                <Grid container alignItems=\"center\" xs={3} onClick={() => this.handleClick(0)}>\r\n                    <Typography variant=\"h5\" style={{marginLeft:\"3%\"}} >\r\n                        COVID-19 AI\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid container xs={9} justify=\"flex-end\" style={{padding:3}}>\r\n                \r\n                <Button \r\n                    startIcon={<Info/>}\r\n                    variant=\"outlined\" \r\n                    size=\"small\" \r\n                    color=\"primary\"  \r\n                    onClick={() => this.props.toggleModal()} \r\n                    style={{marginRight:\"2%\", display:\"none\"}}\r\n                    >\r\n                    Submit X-Ray\r\n                </Button>\r\n                <ButtonGroup variant=\"text\" color=\"inherit\" className=\"buttons\" style={{marginRight:\"1%\"}}>\r\n                    <Button onClick={() => this.handleClick(0)}>Home</Button>\r\n                    <Button onClick={() => this.handleClick(1)}>Guidelines</Button>\r\n                    <Button onClick={() => this.handleClick(2)}>Precautions</Button>\r\n                    <Button onClick={() => this.handleClick(3)}>Self-Diagnosis</Button>\r\n                    <Button onClick={() => this.handleClick(4)}>Team Members</Button>\r\n                </ButtonGroup>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst AnyReactComponent = ({ text }) => (\r\n    <div style={{\r\n      color: 'white', \r\n      background: '#4949fc',\r\n      padding: '15px 10px',\r\n      display: 'inline-flex',\r\n      textAlign: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderRadius: '1%',\r\n      transform: 'translate(-50%, -50%)'\r\n    }}>\r\n      {text}\r\n    </div>\r\n  );\r\nexport default class MapContainer extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state={\r\n           trigger:true\r\n       }\r\n   }\r\n   \r\n    render(){\r\n        console.log(\"Loadmap: lat:\", parseFloat(this.props.lat), \"lng: \", parseFloat(this.props.lng));\r\n            return(\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyCJVtn4hvD9W7WVyTc7XH16jMZ24ZQTnoo'}}\r\n                    defaultCenter={{lat: parseFloat(this.props.lat), lng: parseFloat(this.props.lng)}}\r\n                    defaultZoom={11}\r\n                >\r\n                        <AnyReactComponent\r\n                            lat={parseFloat(this.props.lat)}\r\n                            lng={parseFloat(this.props.lng)}\r\n                            text=\"o\"\r\n                        />\r\n                </GoogleMapReact>\r\n            )\r\n            \r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n      \r\n    },\r\n    input: {\r\n      color: \"white\",\r\n      background: \"#2e2e2e\"\r\n    },\r\n    placeholder: {\r\n      color: \"#696969\"\r\n    }\r\n  };\r\n\r\nfunction Text(props){\r\n    const { classes } = props;\r\n    return(\r\n        <div>\r\n        <TextField InputLabelProps={{className: classes.placeholder}} inputProps={{className: classes.input}} variant=\"filled\" fullWidth style={{marginTop:\"5vh\"}} label=\"Something else\"/>\r\n        <TextField InputLabelProps={{className: classes.placeholder}} inputProps={{className: classes.input}} variant=\"filled\" fullWidth style={{marginTop:\"5vh\"}} label=\"Yet Something Else\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nText.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Text);","import React,{Component} from \"react\";\r\nimport {Grid, Button, Box, Typography} from '@material-ui/core';\r\nimport { Publish } from \"@material-ui/icons\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport MapContainer from './MapComponent';\r\nimport Text from \"./TextComponent\";\r\n\r\nexport default class Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            lat: 70,\r\n            lng: 45,\r\n            loadMap: false,\r\n            image:''\r\n        }\r\n\r\n    }\r\n\r\n    onImageChange = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n          let reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            this.setState({image: e.target.result});\r\n          };\r\n          reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n      }\r\n\r\n    renderImage(){\r\n        if (this.state.image !== ''){\r\n            return(\r\n                <Grid container justify=\"center\" style={{maxHeight:\"80vh\", maxWidth:\"30vw\", overflowX:\"scroll\", overflowY:\"scroll\"}}>\r\n                    <img src={this.state.image} alt=\"SelectedImage\"/>\r\n                </Grid>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Grid container xs={4} alignItems=\"center\" style={{flex:7}}>\r\n                    <Typography variant=\"h5\" style={{color:\"#fff\"}}>\r\n                        Selected Image Appears Here\r\n                    </Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n    renderMap(){\r\n        if(this.state.loadMap){\r\n            console.log(\"loadmap: \", this.state.loadMap);\r\n            return(\r\n                <MapContainer\r\n                    key={this.state.lat} \r\n                    lat={this.state.lat} \r\n                    lng={this.state.lng}\r\n                />\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Grid item xs={4}>\r\n                <Typography variant=\"h5\" style={{color: \"white\"}}>\r\n                    Select location to begin\r\n                </Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <Grid container justify=\"space-evenly\" direction=\"row\">\r\n                    <Grid item direction=\"column\" alignItems=\"flex-start\" justify=\"center\" xs={4} style={{ height:\"100%\", paddingRight:\"2vw\", paddingLeft:\"2vw\"}}>\r\n                        <Typography variant=\"h5\" style={{color:\"#fff\", paddingTop:\"6vh\", margin:5}}>\r\n                            Check Symptoms\r\n                        </Typography>\r\n\r\n                        <Autocomplete\r\n                            style={{width: '98%', height:\"9vh\", marginTop:\"5vh\", backgroundColor:\"rgba(46,46,46,0.8)\", borderColor:\"rgba(0,0,0,0)\", borderBottom:\"black\", color:\"white\"}}\r\n                            onPlaceSelected={(place) => {\r\n                                try{\r\n                                console.log(\"location: \", place);\r\n                                const coordinates = JSON.parse(JSON.stringify(place.geometry.location));\r\n                                this.setState({\r\n                                    lat: JSON.stringify(coordinates.lat),\r\n                                    lng: JSON.stringify(coordinates.lng),\r\n                                    loadMap: true\r\n                                })                                \r\n                                }\r\n                                catch{\r\n                                    alert('Daily quota limit for Google Maps API exceeded.')                                }\r\n                            }}\r\n                            types={['(regions)']}\r\n                        />\r\n                        <Text/>\r\n                        <Grid container direction=\"row\" alignItems=\"flex-start\" style={{marginTop:\"4vh\"}}>\r\n                            <Box my={3} mr={2}>\r\n                                <Button startIcon={<Publish/>} variant=\"contained\" color=\"primary\">\r\n                                    Upload\r\n                                </Button>\r\n                            </Box>\r\n                            <Box my={3}>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    id=\"contained-button-file\"\r\n                                    onChange= {(e) => this.onImageChange(e)}\r\n                                    style={{display:\"none\"}}\r\n                                    type=\"file\"\r\n                                />\r\n                                <label style={{paddingTop:20, margin:5, marginTop:\"8vh\"}} htmlFor=\"contained-button-file\">\r\n                                    <Button  variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                    Select Picture\r\n                                    </Button>\r\n                                </label>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container direction=\"column\" justify=\"center\" xs={4} style={{padding:\"2%\", borderRadius:\"16px\"}}>\r\n                        {this.renderMap()}\r\n                    </Grid>\r\n\r\n                    <Grid container direction=\"column\" xs={4} style={{padding:\"2%\", borderRadius:\"16px\"}}>\r\n                        {this.renderImage()}\r\n                    </Grid>\r\n                </Grid>\r\n        );\r\n    }   \r\n}\r\n\r\n    ","import React from 'react';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport Home from \"./HomeComponent\";\r\nexport default class Router extends React.Component{\r\n\r\n    render(){\r\n        console.log(\"recieved route: \", this.props.route)\r\n        if(this.props.route === 0){\r\n            return(\r\n                <Home/>\r\n            );\r\n        }\r\n        if(this.props.route === 1){\r\n            return(\r\n                <Guidelines/>\r\n            );\r\n        }\r\n        if(this.props.route === 2){\r\n            return(\r\n                <Precautions/>\r\n            );\r\n        }\r\n        if(this.props.route === 3){\r\n            return(\r\n                <SelfDiagnosis/>\r\n            );\r\n        }\r\n        if(this.props.route === 4){\r\n            return(\r\n                <Members/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport function Guidelines() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n                Home goes here\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\nexport function Precautions() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n                Precautions Content goes here\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\nexport function SelfDiagnosis() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n                Self-Diagnosis Content goes here\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}\r\nexport function Members() {\r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n                Members Content goes here\r\n            </Typography>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport XrayModal from \"./Components/XrayComponent\";\nimport Navbar from './Components/NavbarComponent'\nimport Router from \"./Components/Router\";\n\nrequire('typeface-roboto')\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      address:0,\n      XrayModal:false\n    }\n    this.handleNav = this.handleNav.bind(this);\n    this.toggleXrayModal = this.toggleXrayModal.bind(this);\n  }\n  handleNav(address){\n    this.setState({address: address})\n      \n  }\n  toggleXrayModal(){\n    this.setState({XrayModal: !this.state.XrayModal})\n  }\n\n  render(){\n    console.log(\"address: \", this.state.address);\n    return (\n      <div className=\"App\">\n        <div>\n          <Navbar toggleModal={this.toggleXrayModal} navigate={this.handleNav}/>\n        </div>\n        <Router route={this.state.address}/>\n        <XrayModal route={this.state.XrayModal} toggleModal={this.toggleXrayModal}/>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}